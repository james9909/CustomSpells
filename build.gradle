import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "io.papermc.paperweight.userdev" version "1.5.5"
}

wrapper {
    gradleVersion = "7.6"
    setDistributionType(Wrapper.DistributionType.ALL)
}

group 'com.github.james9909'
version '1.20-0.1.0'

sourceCompatibility = 17
targetCompatibility = 17

// Disable the regular jar task, since we only want the shadow jar
jar.enabled = false
tasks.build.dependsOn tasks.shadowJar

shadowJar {
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    relocate("kotlin", "com.github.james9909.customspells.shaded.kotlin")
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://repo.codemc.io/repository/maven-public/" }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url = "https://jitpack.io" }
    flatDir {
        dirs "lib"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.saicone.rtag:rtag:1.3.2"
    implementation "com.saicone.rtag:rtag-item:1.3.2"
    compileOnly ":MagicSpells-4.0-Beta-14"
    compileOnly "io.papermc.paper:paper-api:1.20-R0.1-SNAPSHOT"
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.20-R0.1-SNAPSHOT")
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

test {
    outputs.upToDateWhen {false}
    useJUnitPlatform()
    testLogging {
        afterTest { desc, result ->
            logger.quiet "${desc.className} > ${desc.name}: ${result.resultType}"
        }
        // Taken from https://stackoverflow.com/a/36130467
        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}
